runApp()
i
runApp()
i
server.R$i
runApp()
i
runApp()
i
runApp()
i
runApp()
runApp()
x
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
e = ncol(data)
e
nrow(data)
to.matrix
to.array
as.matrix.data.frame(data)
as.matrix(data)
data
runApp()
data
data <- read_excel("./data/scores.xlsx")
data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data
typeof(data)
d = data.frame(data)
d
typeof(data)
typeof(d)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(DT)
install.packages(DT)
install.packages("DT")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(data)
data[length(data[["ID"]]), 2:4]
data[length(data[["ID"]]), range(2,length(colnames(data)))]
data[length(data[["ID"]]), range(1,length(colnames(data)))]
runApp()
runApp()
range(1,length(colnames(data))
)
seq(1,length(colnames(data)))
data[length(data[["ID"]]), seq(2,length(colnames(data)))]
runApp()
data
read_excel("./data/scores.xlsx")
d = read_excel("./data/scores.xlsx")
d
d[length(d[["ID"]]), seq(2,length(colnames(d)))]
data[length(data[["ID"]]-1), seq(2,length(colnames(data)))]
data[length(data[["ID"]]) - 1, seq(2,length(colnames(data)))]
length(data[["ID"]]) - 1
length(data[["ID"]])
d[length(d[["ID"]]) - 1, seq(2,length(colnames(d)))]
runApp()
runApp()
data[2,2:4]
data[2,seq(2,5)]
data[2,seq(2,4)]
data
d = read_excel("./data/scores.xlsx")
d
d[2,seq(2,4)]
d[2,seq(2,5)]
d[2,seq(2,length(colnames(d)))]
runApp()
runApp()
data[,seq(1, length(colnames(data))]
data[,seq(1, length(colnames(data)))]
runApp()
runApp()
runApp()
runApp()
runApp()
test
Test
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d
sort(d[['Test 1']])
as.data.frame(sort(d[['Test 1']]))
typeof(data)
order(data[['Test 1']])
data[['Test 1']]
d1 = d[["Test 1"]]
d1
d['Test 1']
sort(d['Test 1'])
order(d['Test 1'])
order(d)
d
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
data
data[order(data$`Test 1`)]
data[order(data$Test 1)]
data[order(data['Test 1'])]
data[order(data[['Test 1']])]
data[1]
data[2]
data[order(data[2])]
data[order(data[2]),]
data[order(data$`Test 1`),]
d = data[order(data$`Test 1`),]
d
d[,1:3]
d[,1:2]
d = d[,1:2]
d
data[order(data[1]),]
data[order(data[['Test 1']]),]
data[order(data[[1]),]
data[order(data[[1]]),]
data
data[[1]]
data[[2]]
data[order(data[[2]]),]
data[order(data[[length(colnames(data))]]),]
d = data[order(data[[length(colnames(data))]]),]
d
d = d[,range(1,length(colnames(d)))]
d
d
-d
d = data[order(data[[length(colnames(data))]]),]
d
d = data[order(data[[length(colnames(data))]], ascending = FALSE),]
d = data[order(data[[length(colnames(data))]], decreasin = TRUE),]
data
data[order(data[[1]]),]
data[order(data[[2]]),]
data[order(data[[2]], decreasing = TRUE),]
data[order(data[[length(colnames(data))]], decreasing = TRUE),]
runApp()
runApp()
shiny::runApp()
for (i in 1:length(colnames(data))-1) {
d[i] = data[order(data[[i + 1]], decreasing = TRUE),]
d[i] = d[,range(2, i + 1)]
}
for (i in seq(1,length(colnames(data))-1)) {
d[i] = data[order(data[[i + 1]], decreasing = TRUE),]
d[i] = d[,range(2, i + 1)]
}
d1
data
d[1] = data
d[1]
paste('d', 1, sep = "")
paste('d', 1, sep = "") = data
var = paste('d', 1, sep = "")
var
runApp()
length(data$ID)
data
data <- read_excel("./data/scores.xlsx")
length(data$ID)
data
data[1:20,]
data[21,]
data[length(data$ID) - 2,]
data[length(data$ID) - 2,1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
1 > data[length(data$ID) - 2,1]
data[length(data$ID) - 2,1]
20 = data[length(data$ID) - 2,1]
20 == data[length(data$ID) - 2,1]
runApp()
runApp()
runApp()
runApp()
for (i in 1:length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in 1:length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(2, i + 1)]
print(d)
}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)]
print(d)
}
runApp()
runApp()
runApp()
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)]
print(d)}
runApp()
runApp()
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)]}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)]}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)] print(d)}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)] print(d)}
for (i in seq(1,length(colnames(data))-1)) {
d = data[order(data[[i + 1]], decreasing = TRUE),]
d = d[,range(1, i + 1)]
print(d)}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
length(colnames(data))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
length(colnames(data)
)
data <- read_excel("./data/scores.xlsx")
length(colnames(data))
runApp()
data[,length(colnames(data)) ]
order(data$Sum)
data[order(data$Sum)]
data[order(data$Sum),]
data$Sum[order(data$Sum),]
data[order(data$Sum),]$sum
data[order(data$Sum),]$sum
data[order(data$Sum),]
data[1,2]
data[order(data$Sum),data$Sum]
data[order(data$Sum),10]
data[order(data$Sum), length(colnames(data))]
data[order(data$Sum, decreasing = 'TRUE'), length(colnames(data))]
d = data[order(data$Sum, decreasing = 'TRUE'), length(colnames(data))]
d
d = data[order(data$Sum, decreasing = 'TRUE'), 1:length(colnames(data))]
d
d = data[order(data$Sum, decreasing = 'TRUE'), range(1,length(colnames(data)))]
d
d[where()]
shiny::runApp()
runApp()
d = data[order(data$Sum, decreasing = 'TRUE'), 1:length(colnames(data))]
d
d = data[order(data$Sum, decreasing = 'TRUE'), range(1,length(colnames(data)))]0
d = data[order(data$Sum, decreasing = 'TRUE'), range(1,length(colnames(data)))]
d
d[['ID']]
d['ID']
d[d['ID']!="max"
]
runApp()
d
data
data <- read_excel("./data/scores.xlsx")
d=data
d
d['Sum']
d[('Sum','ID')]
d[('Sum','ID'),]
d['Sum']
d[-c(nrow(d))]
d[-c(nrow(d)),]
nrow(d)
d[22,]
data
nrow(data)
d[21]
d[21,]
d = d[-c(nrow(d),nrow(d) - 1),]
d
nrow(d)
data <- read_excel("./data/scores.xlsx")
d = data
d = d[-c(nrow(d),nrow(d) - 1),]
d = d[order(d$Sum, decreasing = 'TRUE'), range(1,length(colnames(data)))]
d
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
t <- read_excel("./data/time.xlsx")
t
t1 = t[, 1:30]
t1
t1 = t[, 1:31]
t1
t2 = t[,32:61]
t2
t3 = t[,62:91]
t3
t[,62]
t[5,62]
t[6,62]
t[7,62]
t[6,62]
t1
t1 = t1[1,]
t1
barplot(t)
barplot(as.matrix(t))
t1
barplot(as.matrix(t1))
t1
ncol(t1)
t[,31]
t[,2:31]
nrow(t)
t[nrow(t),2:31]
t
t1 = t[2, 2:31]
t1a = t[nrow(t),2:31]
t1a
t1
r = rbind(t1, t1a)
r
barplot(r,beside = T)
barplot(as.vector(r),beside = T)
barplot(as.matrix(r),beside = T)
runApp()
t
t[1,]
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
